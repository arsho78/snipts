priority 10

snippet pcl "public class" b
public class `!p snip.rv=snip.basename` ${1:extends/implements}{
	${0:body}
}
endsnippet

snippet cl "class" b
class ${1:ClassName} {
	${0:body}
}
endsnippet

snippet psvm "main method" b
public static void main(String[] args) {
	${0:method content}
}
endsnippet

snippet pv "public void mehtod" b
public void ${VISUAL}${1:method}(${2:}) {
	${0}
}
endsnippet

snippet psv "public static void mehtod" b
public static void ${VISUAL}${1:method}(${2:}) {
	${0}
}
endsnippet

snippet md "general method with maximum 3 parameters" b
${1:public }${2:static }${3:void }${4:methodName}(${5:param1,${6:param2,${7:param3}}}) {
	${0:method content}
}
endsnippet

snippet prmd "private method with maximum 3 parameters" b
${1:private }${2:void }${3:methodName}(${4:param1,${5:param2,${6:param3}}}) {
	${0:method content}
}
endsnippet

snippet stmd "static method with maximum 3 parameters" b
${1:static }${2:void }${3:methodName}(${4:param1,${5:param2,${6:param3}}}) {
	${0:method content}
}
endsnippet

snippet getter "getter method" b
public ${1:String} get${2:Property}() {
	return this.${2/\w+\s*/\l$0/};
}
endsnippet

snippet setter "setter method" b
public void set${1:Property}(${2:String} ${1/\w+\s*/\l$0/}) {
	this.${1/\w+\s*/\l$0/} = ${1/\w+\s*/\l$0/};
}
endsnippet

snippet mlcom "multiple line comments" b
/*
 *${VISUAL} ${0:press enter to input more content}
 */
endsnippet

snippet doccom "documentation comments" b
/**
 * ${VISUAL} ${0:press enter to input more content}
 */
endsnippet

snippet for "for loop" b
for (int ${1:i} = ${2:0}; $1 < ${3:count}; ${4:$1++}) {
	${VISUAL} ${0:press enter to input more content}
}
endsnippet

snippet if "if statements" 
if (${1:condition}) {
	${VISUAL}${2:press enter to input more statements}
} 
endsnippet

snippet ifelse "if else statements" 
if (${1:condition}) {
	${VISUAL}${2:press enter to input more statements}
} ${3:else ${4:\{
	${5:statements}
	\}}}
endsnippet

snippet switch "switch statements" b
switch (${1:expression}) {
	${2:cases }
 	${3:default:
		${4:statements}}
}
endsnippet

snippet cases "case statements" b
case: ${1:condition}
	${2:statements}
	break;
${3:cases }
endsnippet

snippet while "while loop" b
while (${1:condition}) {
	${2:statements;}
	${3:iteration_statement}
}
endsnippet

snippet dowhile "do while loop" b
do {
	${1:statements};
	${2:iteration statement;}
} while (${3:condition});
endsnippet

snippet foreach "foreach loop" b
for (${1:type} ${2:variablename} : ${3:array|collection}) {
	${VISUAL} ${0:statements}
}
endsnippet

snippet println "println() method" b
System.out.println(${VISUAL}${1:content});
endsnippet

snippet print "print() method" b
System.out.print(${VISUAL}${1:content});
endsnippet

snippet try( "try block with resource" b
try (
		${1:resource}
	) {
		${VISUAL} ${2:try block statements}
}
endsnippet

snippet try(c "try block with resource and catch" b
try (
		${1:resource}
	) {
	${VISUAL} ${0:try block statements}
} catch (${2:Exception} ${3:e}) {
	${4:$4.printStackTrace();}
}	
endsnippet
